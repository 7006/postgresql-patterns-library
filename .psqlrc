-- If we're connecting through pgbouncer, then prompt's %p is not real, so get real PID
select pg_backend_pid() \gset

-- primary or standby
select pg_is_in_recovery() \gset

-- Colors: https://misc.flogisoft.com/bash/tip_colors_and_formatting
-- Colors: https://en.wikipedia.org/wiki/ANSI_escape_code#3-bit_and_4-bit
\set lred    '%[%033[1;31m%]%'
\set green   '%[%033[32m%]'
\set yellow  '%[%033[33m%]'
\set cyan    '%[%033[36m%]'
\set white   '%[%033[37m%]'
\set magenta '%[%033[35m%]'
\set reset   '%[%033[0m%]'

\if :pg_is_in_recovery
    \set PROMPT1 :cyan'\n[%`date --rfc-3339=seconds`] ':white'standby ':yellow'psql://':green'%n':cyan'@':green'%`hostname`':cyan':':green'%>':yellow'/%/ ':white'(pid=%:pg_backend_pid:) \n%x':lred'#':reset' '
\else
    \set PROMPT1 :cyan'\n[%`date --rfc-3339=seconds`] ':magenta'primary ':yellow'psql://':green'%n':cyan'@':green'%`hostname`':cyan':':green'%>':yellow'/%/ ':white'(pid=%:pg_backend_pid:) \n%x':lred'#':reset' '
\endif

\set PROMPT2 ''

\set ON_ERROR_ROLLBACK interactive

\set HISTSIZE 2000

-- If a command is run more than once in a row, only store it once in the history.
\set HISTCONTROL ignoredups

-- It's 21st century, let's use unicode for borders
\pset linestyle unicode

\pset pager always

\pset null 'Â¤'

\timing

-- Use table format (with headers across the top) by default, but switch to expanded table format when there's a lot of data, which makes it much easier to read
\x auto

\setenv PAGER 'less -iMFXSx4R'
