create type gender as enum ('male', 'female', 'unknown');
create type name_type as enum ('last_name', 'middle_name', 'first_name');

create table gender_by_ending
(
    id              integer generated by default as identity
        constraint gender_by_ending2_pkey
            primary key,
    ending          varchar(50) not null
        constraint gender_by_ending2_ending_check
            check (((ending) <> '') AND (btrim((ending)) = (ending))),
    gender          gender      not null,
    name_type       name_type   not null,
    example         varchar(255),
    ending_translit varchar(50)
        constraint gender_by_ending2_ending_translit_check
            check (((ending_translit) <> '') AND (btrim((ending_translit)) = (ending_translit)))
);
comment on column gender_by_ending.ending is 'Окончание';
comment on column gender_by_ending.gender is 'Пол';
comment on column gender_by_ending.name_type is 'Тип last_name или middle_name';
comment on column gender_by_ending.example is 'Пример';
comment on column gender_by_ending.ending_translit is 'Транслитерация функцией iuliia_translate_mosmetro()';
create index gender_by_ending2_name_type_idx on gender_by_ending (name_type);
create unique index gender_by_ending2_lower_idx on gender_by_ending (lower(ending::text));

create table person_name_dictionary
(
    id            integer generated by default as identity
        constraint person_name_dictionary2_pkey
            primary key,
    name          varchar(255) not null
        constraint person_name_dictionary2_name_check
            check (((name) <> '') AND (btrim((name)) = (name))),
    gender        gender,
    name_translit varchar(255)
        constraint person_name_dictionary2_name_translit_check
            check (((name_translit) <> '') AND (btrim((name_translit)) = (name_translit))),
    popularity    real
        constraint person_name_dictionary2_popularity_check
            check ((popularity >= (0)::double precision) AND (popularity <= (1)::double precision))
);
comment on column person_name_dictionary.name is 'Имя';
comment on column person_name_dictionary.gender is 'Пол';
comment on column person_name_dictionary.name_translit is 'Транслитерация функцией iuliia_translate_mosmetro()';
comment on column person_name_dictionary.popularity is 'Популярность всех имён относительно друг-друга. NULL приравнивается к 1';
create index person_name_dictionary_lower_name_translit on person_name_dictionary (lower(name_translit));
create unique index person_name_dictionary2_lower_idx on person_name_dictionary (lower(name));
